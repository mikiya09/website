
---
/* 
dynamically display experience with a tab, users can click on the headings and will be shown with different content based on different heading
elements: 
1) headings (an array of string)
2) contents (an array of string)
make elements in this tab a Props, which can be accessed and modified by anything other files that import this Experience.astro

However, the issue is that I wanna embed hyperlink into some text, so the variables can't be an array of string 
I don't know if there is a way to passing an array of html object and so before finding a way of doing that, I keep the tranditional way
*/

// ----------------------------- keep --------------------------------
export interface Props {
    activeHeaderColor? : string;
    headings: string[];
    contents: string[];
}
// ----------------------------- keep --------------------------------

// only the activeHeaderColor variable is usable right now
const { headings, contents, activeHeaderColor = "#ab1c0f"} = Astro.props as Props
---

<div class="tabs">
    <h2>Get Start With Astro</h2>
    <p>Get a new project up and running locally with our helpful create-astro CLI</p>
    <ul class="tabs-header">
        <li>Research</li>
        <li>Projects</li>
        <li>Work</li>
    </ul>
    <ul class="tabs-content">
        <li class="tab">I-><a href="www.google.com">think</a></li>
        <li class="tab">A</li>
        <li class="tab">M</li>
    </ul>
</div>


<!-- ---- style ---- -->
<style>

.tabs {
    margin-top: 30px;
    padding: 3rem;
}

.tabs-header {
    display: flex;
    background: #333;
    color: #fff;
    padding: 10px 20px;
}

/* 
in css setting cursor property to pointer means whichever tag have this class is clickable 
*/
.tabs-header li {
    margin-right: 20px;
    cursor: pointer;
}

.tabs-content {
    font-size: 18px;
    padding: 20px;
    border: 1px solid #333;
    font-weight: bold;
    background: #f4f4f4;
    box-shadow: 10px 10px 10px var(--color-black);
}

</style>



<!-- -------------------------- script --------------------------- -->

<script define:vars={{activeHeaderColor}}>

  function createTabs(element) {
    const header = element.querySelector('.tabs-header');
    const content = element.querySelector('.tabs-content');
    const tab_headers = [...header.children];
    const tab_contents = [...content.children];
    tab_contents.forEach((x) => (x.style.display = 'none'));
    let current_tab_index = -1;
    function setTab(index) {
      if (current_tab_index > -1) {
        tab_headers[current_tab_index].style.fontWeight = 400;
        tab_headers[current_tab_index].style.color = '#fff';
        tab_contents[current_tab_index].style.display = 'none';
      }
      tab_headers[index].style.fontWeight = 800;
      tab_headers[index].style.color = activeHeaderColor;
      tab_contents[index].style.display = 'flex';
      current_tab_index = index;
    }
    let default_tab_index = tab_headers.findIndex((x) => {
      return [...x.classList].indexOf('default-tab') > -1;
    });
    default_tab_index = default_tab_index === -1 ? 0 : default_tab_index;
    setTab(default_tab_index);
    tab_headers.forEach((x, i) => (x.onclick = (event) => setTab(i)));
  }
  // Run
  [...document.querySelectorAll('.tabs')].forEach((x) => createTabs(x));

</script>
